require 'rails_helper'


# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to test the controller code that
# was generated by Rails when you ran the scaffold generator.
#
# It assumes that the implementation code is generated by the rails scaffold
# generator. If you are using any extension libraries to generate different
# controller code, this generated spec may or may not pass.
#
# It only uses APIs available in rails and/or rspec-rails. There are a number
# of tools you can use to make these specs even more expressive, but we're
# sticking to rails and rspec-rails APIs to keep things simple and stable.

RSpec.describe "/ratings", type: :request do
  include Devise::Test::IntegrationHelpers
  # This should return the minimal set of attributes required to create a valid
  # Rating. As you add validations to Rating, be sure to
  # adjust the attributes here as well.

  let(:user) { User.create!(First_name: "Example User",Last_name: "p",email: "name6@gmail.com",password: "123456") }
  let(:movie) { Movie.create!( user_id: user.id, release_date:"05/05/2023", Name:"Hari" ) }

  let(:valid_attributes) {
    { star: 4, movie_id: movie.id }
  }

  let(:invalid_attributes) {
    { star: nil, movie_id: nil }
  }
  before do
    sign_in user
  end

  describe "POST /create" do
    context "with valid parameters" do

      it "creates a new Rating" do
        expect {
          post movie_ratings_url(movie_id: movie.id), params: { rating: valid_attributes }
        }.to change(Rating, :count).by(1)
      end

      it "redirects to the created rating" do
        post movie_ratings_url(movie_id: movie.id), params: { rating: valid_attributes }
        expect(response).to redirect_to(movie_path(movie))
      end
    end

    context "with invalid parameters" do
      it "does not create a new Rating" do
        expect {
          post movie_ratings_url(movie_id: movie.id), params: { rating: invalid_attributes }
        }.to change(Rating, :count).by(0)
      end


      it "renders a successful response (i.e. to display the 'new' template)" do
        post movie_ratings_url(movie_id: movie.id), params: { rating: invalid_attributes }
        puts response.status
        expect(response).to be_successful
      end

    end
  end



end

